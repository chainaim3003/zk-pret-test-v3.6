{
  "name": "recursion",
  "version": "0.1.5",
  "description": "",
  "author": "",
  "license": "Apache-2.0",
  "keywords": [
    "mina-zkapp",
    "mina-zk-app",
    "mina-dapp",
    "zkapp"
  ],
  "type": "module",
  "main": "build/src/index.js",
  "types": "build/src/index.d.ts",
  "scripts": {
    "copy-wasm": "cp -r node_modules/o1js/dist/node/bindings/compiled/_node_bindings/* build/",
    "build": "npx tsc",
    "pre-build-check": "node pre-build-validation.mjs",
    "build-safe": "npm run pre-build-check && npm run build",
    "precompile-zk": "npm run build && node scripts/precompile-zk-programs.js",
    "smart-precompile": "node scripts/smart-precompile.js",
    "build-smart": "node scripts/smart-precompile.js build",
    "force-precompile": "node scripts/smart-precompile.js force",
    "build-with-precompile": "npm run build && npm run precompile-zk",
    "test:local-complete-GLEIF": "npm run build && node build/scripts/local-deploy-verify-GLEIF.js",
    "test:local-complete-EXIM": "npm run build && node build/scripts/local-deploy-verify-EXIM.js",
    "test:local-complete-EXIM:company": "npm run build && node build/scripts/local-deploy-verify-EXIM.js",
    "example-EXIM:local-sree": "npm run build && node build/scripts/local-deploy-verify-EXIM.js \"SREE PALANI ANDAVAR AGROS PRIVATE LIMITED\"",
    "example-EXIM:local-tata": "npm run build && node build/scripts/local-deploy-verify-EXIM.js \"TATA MOTORS LIMITED\"",
    "test:local-complete-CorpReg": "npm run build && node build/scripts/local-deploy-verify-CorpReg.js",
    "test:local-complete-CorpReg:IN": "npm run build && node build/scripts/local-deploy-verify-CorpReg.js --jurisdiction=IN",
    "test:local-complete-CorpReg:US": "npm run build && node build/scripts/local-deploy-verify-CorpReg.js --jurisdiction=US",
    "example-CorpReg:local-sree": "npm run build && node build/scripts/local-deploy-verify-CorpReg.js \"U01112TZ2022PTC039493\"",
    "example-CorpReg:local-us": "npm run build && node build/scripts/local-deploy-verify-CorpReg.js --jurisdiction=US \"Delaware_Corp_123\"",
    "test:local-single-CorpReg": "npm run build && node build/scripts/local-deploy-verify-single-CorpReg.js",
    "test:local-single-CorpReg:IN": "npm run build && node build/scripts/local-deploy-verify-single-CorpReg.js --jurisdiction=IN",
    "example-CorpReg:single-sree": "npm run build && node build/scripts/local-deploy-verify-single-CorpReg.js \"U01112TZ2022PTC039493\"",
    "deploy": "npm run build && node build/scripts/deploy.js",
    "deploy:testnet": "npm run deploy testnet-gleif-dev",
    "deploy:testnet-GLEIF-stable": "npm run deploy testnet-gleif",
    "deploy:testnet-GLEIF-force": "npm run deploy testnet-gleif-force",
    "deploy:mainnet": "npm run deploy mainnet-gleif",
    "deploy:testnet-corp-reg-india": "npm run deploy testnet-corp-reg-india",
    "deploy:testnet-corp-reg-usa": "npm run deploy testnet-corp-reg-usa",
    "deploy:testnet-corp-reg-force": "npm run deploy testnet-corp-reg-force",
    "deploy:testnet-exim": "npm run deploy testnet-exim-dev",
    "deploy:testnet-exim-dev": "npm run deploy testnet-exim-dev",
    "deploy:testnet-exim-force": "npm run deploy testnet-exim-force",
    "format": "prettier --write --ignore-unknown **/*",
    "test": "node --experimental-vm-modules --experimental-wasm-modules --experimental-wasm-threads node_modules/jest/bin/jest.js",
    "testw": "node --experimental-vm-modules --experimental-wasm-modules --experimental-wasm-threads node_modules/jest/bin/jest.js --watch",
    "lint": "npx eslint src/* --fix",
    "ts-run": "NODE_OPTIONS='--import=./register.js' ts-node --esm ",
    "test:advanced-risk-optimerkle": "npm run build && node ./build/tests/with-sign/RiskLiquidityAdvancedOptimMerkleVerificationTestWithSign.js 95",
    
    "_comment_legacy_risk": "=== LEGACY RISK SCRIPTS (PRESERVED FOR BACKWARD COMPATIBILITY) ===",
    "test:basel3-risk-optimerkle": "npm run build && node ./build/tests/with-sign/RiskLiquidityBasel3OptimMerkleVerificationTestWithSign.js 100 100",
    "test:stablecoin-risk-optimerkle": "npm run build && node ./build/tests/with-sign/RiskLiquidityStableCoinOptimMerkleVerificationTestWithSign.js 100 20 25 80",
    "test:all-risk-optimerkle": "npm run test:advanced-risk-optimerkle && npm run test:basel3-risk-optimerkle && npm run test:stablecoin-risk-optimerkle",

    "_comment_new_risk": "=== NEW ORGANIZED RISK SCRIPTS (RECOMMENDED) ===",
    "test:network-risk-stablecoin": "npm run build && node build/tests/with-sign/RiskStableCoinNetworkMultiVerifier.js",
    "test:network-risk-basel3": "npm run build && node build/tests/with-sign/RiskBasel3NetworkMultiVerifier.js",
    "test:local-risk-stablecoin": "npm run build && node build/tests/with-sign/RiskStableCoinLocalMultiVerifier.js",
    "test:local-risk-basel3": "npm run build && node build/tests/with-sign/RiskBasel3LocalMultiVerifier.js",

    "_comment_risk_examples": "=== RISK VERIFICATION EXAMPLES (PRE-CONFIGURED) ===",
    "test:risk-stablecoin-us-valid": "npm run test:network-risk-stablecoin -- 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/StableCoin/CONFIG/US/StableCoin-VALID-1.json ultra_strict US",
    "test:risk-stablecoin-eu-valid": "npm run test:network-risk-stablecoin -- 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/StableCoin/CONFIG/EU/StableCoin-VALID-1.json ultra_strict EU",
    "test:risk-basel3-valid": "npm run test:network-risk-basel3 -- 100 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/Basel3/CONFIG/basel3-VALID-1.json",

    "_comment_local_examples": "=== LOCAL RISK VERIFICATION (DEVELOPMENT OPTIMIZED) ===",
    "test:risk-stablecoin-local-us": "npm run test:local-risk-stablecoin -- 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/StableCoin/CONFIG/US/StableCoin-VALID-1.json ultra_strict US",
    "test:risk-stablecoin-local-eu": "npm run test:local-risk-stablecoin -- 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/StableCoin/CONFIG/EU/StableCoin-VALID-1.json ultra_strict EU",
    "test:risk-basel3-local": "npm run test:local-risk-basel3 -- 100 100 http://3.88.158.37:8083/eventsBatch src/data/RISK/Basel3/CONFIG/basel3-VALID-1.json",
    "test:risk-basel3-local-fast": "npm run test:local-risk-basel3 -- 80 80 http://3.88.158.37:8083/eventsBatch",

    "_comment_risk_testing": "=== RISK TESTING WORKFLOWS ===",

    "_comment_development": "=== DEVELOPMENT WORKFLOWS ===",
    "dev:risk-stablecoin": "npm run test:risk-stablecoin-local-us",
    "dev:risk-basel3": "npm run test:risk-basel3-local-fast",
    "dev:risk-all": "npm run test:all-risk-fast",
    "build-ts-only": "npx tsc",
    "verify-build": "echo \"Build files: $(find build/ -name \"*.js\" | wc -l)\"",
    "postinstall": "npm run build",
    "test:infrastructure": "node test-infrastructure.mjs",
    "test:gleif": "npm run build && node --experimental-vm-modules --experimental-wasm-modules --experimental-wasm-threads ./build/tests/with-sign/GLEIFOptimVerificationTestWithSign.js",
    "setup:testnet": "npm run build && node ./build/testnet-setup.js",
    "setup:testnet-direct": "npx ts-node --esm src/testnet-setup.ts",
    "check:funding": "npm run build && node ./build/check-funding.js",
    "test:business-process-integrity": "npm run build && node build/tests/with-sign/BusinessProcessIntegrityTest.js",
    "test:local-business-process": "npm run build && node build/tests/with-sign/BusinessProcessLocalMultiVerifier.js",
    "test:network-business-process": "npm run build && node build/tests/with-sign/BusinessProcessNetworkMultiVerifier.js",
    "test:local-business-process-single": "npm run build && node build/tests/with-sign/BusinessProcessLocalMultiVerifier.js",
    "test:network-business-process-single": "npm run build && node build/tests/with-sign/BusinessProcessNetworkMultiVerifier.js",
    "test:local-business-process-multi": "npm run build && node build/tests/with-sign/BusinessProcessLocalMultiVerifier.js",
    "test:network-business-process-multi": "npm run build && node build/tests/with-sign/BusinessProcessNetworkMultiVerifier.js",
    "example-business-process:local-stablecoin": "npm run build && node build/tests/with-sign/BusinessProcessLocalMultiVerifier.js STABLECOIN ./src/data/STABLECOIN/process/EXPECTED/STABLECOIN-Expected.bpmn ./src/data/STABLECOIN/process/ACTUAL/STABLECOIN-Accepted1.bpmn",
    "example-business-process:network-stablecoin": "npm run build && node build/tests/with-sign/BusinessProcessNetworkMultiVerifier.js STABLECOIN ./src/data/STABLECOIN/process/EXPECTED/STABLECOIN-Expected.bpmn ./src/data/STABLECOIN/process/ACTUAL/STABLECOIN-Accepted1.bpmn",
    "test:original-business-process": "npm run build && node build/tests/with-sign/BusinessProcessIntegrityOptimMerkleVerificationFileTestWithSign.js",

    "_comment_business_std_integrity": "=== BUSINESS STANDARD INTEGRITY SCRIPTS (NEW PATTERN) ===",
    "test:local-business-std-integrity": "npm run build && node build/tests/with-sign/BusinessStdIntegrityLocalMultiVerifier.js",
    "test:network-business-std-integrity": "npm run build && node build/tests/with-sign/BusinessStdIntegrityNetworkMultiVerifier.js",
    
    "_comment_business_std_examples": "=== BUSINESS STANDARD INTEGRITY EXAMPLES ===",
    "example-business-std:local-bol": "npm run build && node build/tests/with-sign/BusinessStdIntegrityLocalMultiVerifier.js BOL ./src/data/scf/BILLOFLADING/BOL-VALID-1.json",
    "example-business-std:network-bol": "npm run build && node build/tests/with-sign/BusinessStdIntegrityNetworkMultiVerifier.js BOL ./src/data/scf/BILLOFLADING/BOL-VALID-1.json",
    "example-business-std:local-multi": "npm run build && node build/tests/with-sign/BusinessStdIntegrityLocalMultiVerifier.js BOL ./src/data/scf/BILLOFLADING/BOL-VALID-1.json AWB ./src/data/scf/BILLOFLADING/BOL-VALID-2.json",
    "example-business-std:network-multi": "npm run build && node build/tests/with-sign/BusinessStdIntegrityNetworkMultiVerifier.js BOL ./src/data/scf/BILLOFLADING/BOL-VALID-1.json AWB ./src/data/scf/BILLOFLADING/BOL-VALID-2.json",
    
    "_comment_legacy_business_std": "=== LEGACY BUSINESS STANDARD (DEPRECATED) ===",
    "test:legacy-business-std-merkle": "npm run build && node ./build/tests/with-sign/BusinessStdIntegrityOptimMerkleVerificationTestWithSign.js ./src/data/scf/BILLOFLADING/BOL-VALID-1.json"
  },
  "lint-staged": {
    "**/*": [
      "eslint src/* --fix",
      "prettier --write --ignore-unknown"
    ]
  },
  "devDependencies": {
    "@babel/preset-env": "^7.16.4",
    "@babel/preset-typescript": "^7.16.0",
    "@types/jest": "^27.0.3",
    "@types/xmldom": "^0.1.34",
    "@typescript-eslint/eslint-plugin": "^5.5.0",
    "@typescript-eslint/parser": "^5.5.0",
    "esbuild": "^0.25.5",
    "eslint": "^8.7.0",
    "eslint-plugin-o1js": "^0.4.0",
    "husky": "^7.0.1",
    "jest": "^27.3.1",
    "lint-staged": "^11.0.1",
    "prettier": "^2.3.2",
    "ts-jest": "^27.0.7",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^4.9.5"
  },
  "peerDependencies": {
    "o1js": "^1.1.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.7.0",
    "axios": "^1.7.9",
    "build": "^0.1.4",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^4.21.2",
    "glob": "^11.0.1",
    "keccak256": "^1.0.6",
    "merkletreejs": "^0.4.0",
    "module-alias": "^2.2.3",
    "node-fetch": "^3.3.2",
    "tsx": "^4.19.4",
    "xmldom": "^0.6.0",
    "xpath": "^0.0.34",
    "zod": "^3.24.2"
  },
  "_moduleAliases": {
    "@/zk-programs": "./zk-programs"
  }
}
